swagger: "2.0"
info:
  description: "Use the Salesforce IoT REST API to create and manage orchestrations and contexts, and retrieve usage data."
  version: "43.0.0"
  title: "Salesforce IoT API"
  contact:
    email: "support@salesforce.com"
host: "salesforce.com"
basePath: "/services/data/v43.0/iot"
schemes:
- "http"
paths:
  /contexts:
    post:
      tags:
      - "Orchestration Context"
      summary: "Create a context."
      description: ""
      operationId: "createContext"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Context definition."
        required: true
        schema:
          $ref: "#/definitions/ContextInputRepresentation"
      responses:
        400:
          description: "The server can't process the request due to an invalid representation."
        401:
          description: "The request requires user authentication."
        403:
          description: "The user is not authorized to perform this operation."
        201:
          description: "Created the orchestration context."
          schema:
            $ref: "#/definitions/ContextRepresentation"
    get:
      tags:
      - "Orchestration Context"
      summary: "List all contexts that have been defined in your org."
      description: ""
      operationId: "getContexts"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "page"
        in: "query"
        description: "For internal use only."
        required: false
        type: "string"
      - name: "pageSize"
        in: "query"
        description: "The number of contexts returned per page. When one page is returned, it contains the URL in the nextPageUrl property that you use to get the next page of results."
        required: false
        type: "integer"
      - name: "runtime"
        in: "query"
        description: "The Salesforce IoT runtime used."
        required: false
        type: "string"
        enum: ["Standard","HighVolume"]
      - name: "sortDirection"
        in: "query"
        description: "The sort direction, either ascending or descending."
        required: false
        type: "string"
        enum: ["Ascending", "Descending"]
      - name: "sort"
        in: "query"
        description: "The field by which the contexts are sorted."
        required: false
        type: "string"
        enum: ["LastModified", "Label"]
      responses:
        400:
          description: "The server can't process the request due to an invalid representation."
        401:
          description: "The request requires user authentication."
        403:
          description: "The user is not authorized to perform this operation."
        404:
          description: "The resource does not exist."
        200:
          description: "Retrieved all contexts."
          schema:
            $ref: "#/definitions/ContextCollectionRepresentation"

  /contexts/{contextId}:
    get:
      tags:
      - "Orchestration Context"
      summary: "Get the specified context."
      description: ""
      operationId: "getContextById"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "contextId"
        in: "path"
        description: "ID of the context to retrieve."
        required: true
        type: "string"
      responses:
        400:
          description: "The server can't process the request due to an invalid representation."
        401:
          description: "The request requires user authentication."
        403:
          description: "The user is not authorized to perform this operation."
        404:
          description: "The resource does not exist."
        200:
          description: "Retrieved the context."
          schema:
            $ref: "#/definitions/ContextRepresentation"
    put:
      tags:
      - "Orchestration Context"
      summary: "Update the specified context using the specified full context definition."
      description: ""
      operationId: "updateContext"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "contextId"
        in: "path"
        description: "ID of context to update."
        required: true
        type: "string"
      - in: "body"
        name: "body"
        description: "Full context definition to replace previous context."
        required: true
        schema:
          $ref: "#/definitions/ContextInputRepresentation"
      responses:
        400:
          description: "The server can't process the request due to an invalid representation."
        401:
          description: "The request requires user authentication."
        403:
          description: "The user is not authorized to perform this operation."
        409:
          description: "The event or data set cannot be removed from this context because there are active orchestrations that depend on it."
        200:
          description: "Updated context."
          schema:
            $ref: "#/definitions/ContextRepresentation"
    delete:
      tags:
      - "Orchestration Context"
      summary: "Delete the specified context."
      description: ""
      operationId: "deleteContext"
      consumes:
      - "application/json"
      parameters:
      - name: "contextId"
        in: "path"
        description: "ID of the context to delete."
        required: true
        type: "string"
      responses:
        400:
          description: "The server can't process the request due to an invalid representation."
        401:
          description: "The request requires user authentication."
        403:
          description: "The user is not authorized to perform this operation."
        409:
          description: "The context cannot be deleted because it is referenced by an active orchestration."
          schema:
            $ref: "#/definitions/Dependencies"
        204: # no response body here
          description: "Deleted context."

  /contexts/{contextId}/activations:
    post:
      tags:
      - "Orchestration Context"
      summary: "Activate a context."
      operationId: "createContextActivation"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "contextId"
        in: "path"
        description: "ID of the context to activate."
        required: true
        type: "string"
      - in: "body"
        name: "body"
        description: "Context activation definition."
        required: true
        schema:
          $ref: "#/definitions/ContextActivationInputRepresentation"
      responses:
        400:
          description: "The server can't process the request due to an invalid representation."
        401:
          description: "The request requires user authentication."
        403:
          description: "The user is not authorized to perform this operation."
        404:
          description: "The resource does not exist."
        201:
          description: "The context was activated successfully."
          schema:
            $ref: "#/definitions/ContextActivationRepresentation"
    get:
      tags:
      - "Orchestration Context"
      summary: "List of all activations for this context."
      operationId: "getContextActivations"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "contextId"
        in: "path"
        description: "ID of the context activation record to retrieve."
        required: true
        type: "string"
      - name: "page"
        in: "query"
        description: "For internal use only."
        required: false
        type: "string"
      - name: "pageSize"
        in: "query"
        description: "The number of context activations returned per page. When one page is returned, it contains the URL in the nextPageUrl property that you use to get the next page of results."
        required: false
        type: "integer"
      responses:
        400:
          description: "The server can't process the request due to an invalid representation."
        401:
          description: "The request requires user authentication."
        403:
          description: "The user is not authorized to perform this operation."
        404:
          description: "The resource does not exist."
        200:
          description: "Retrieved all context activations."
          schema:
            $ref: "#/definitions/ContextActivationCollectionRepresentation"
              
  /contexts/{contextId}/activations/last:
    get:
      tags:
      - "Orchestration Context"
      summary: "Get the last context activation."
      description: ""
      operationId: "getLastContextActivation"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "contextId"
        in: "path"
        description: "ID of the context activation record to retrieve."
        required: true
        type: "string"
      responses:
        400:
          description: "The server can't process the request due to an invalid representation."
        401:
          description: "The request requires user authentication."
        403:
          description: "The user is not authorized to perform this operation."
        404:
          description: "The resource does not exist."
        200:
          description: "Retrieved the last context activation."
          schema:
            $ref: "#/definitions/ContextActivationRepresentation"

        
  /contexts/{contextId}/activations/{activationId}:
    get:
      tags:
      - "Orchestration Context"
      summary: "Get the specified context activation."
      description: ""
      operationId: "getContextActivationById"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "contextId"
        in: "path"
        description: "ID of the context for the context activation to retrieve."
        required: true
        type: "string"
      - name: "activationId"
        in: "path"
        description: "ID of context activation to retrieve."
        required: true
        type: "string"
      responses:
        400:
          description: "The server can't process the request due to an invalid representation."
        401:
          description: "The request requires user authentication."
        403:
          description: "The user is not authorized to perform this operation."
        404:
          description: "The resource does not exist." 
        200:
          description: "Context Activation"
          schema:
            $ref: "#/definitions/ContextActivationRepresentation"
        
  /orchestrations:
    post:
      tags:
      - "Orchestration"
      summary: "Create an orchestration."
      description: ""
      operationId: "createOrchestration"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Orchestration definition."
        required: true
        schema:
          $ref: "#/definitions/OrchestrationInputRepresentation"
      responses:
        201:
          description: "Created orchestration."
          schema:
            $ref: "#/definitions/OrchestrationRepresentation"
        400:
          description: "The server can't process the request due to an invalid representation."
        401:
          description: "The request requires user authentication."
        403:
          description: "The user is not authorized to perform this operation."
        404:
          description: "The resource does not exist."
    get:
      tags:
      - "Orchestration"
      summary: "List all orchestrations that have been defined in your org."
      description: ""
      operationId: "getOrchestrations"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "page"
        in: "query"
        description: "For internal use only."
        required: false
        type: "string"
      - name: "pageSize"
        in: "query"
        description: "The number of orchestrations returned per page. When one page is returned, it contains the URL in the nextPageUrl property that you use to get the next page of results."
        required: false
        type: "integer"
      - name: "runtimeType"
        in: "query"
        description: "The Salesforce IoT runtime used."
        required: false
        type: "string"
        enum: ["Standard","HighVolume"]
      - name: "sortDirection"
        in: "query"
        description: "The sort direction, either ascending or descending."
        required: false
        type: "string"
        enum: ["Ascending", "Descending"]
      - name: "sort"
        in: "query"
        description: "The field by which to sort the orchestrations."
        required: false
        type: "string"
        enum: ["LastModified", "Label", "ContextLabel"]
      responses:
        200:
          description: "Retrieved all orchestrations."
          schema:
            $ref: "#/definitions/OrchestrationCollectionRepresentation"
        401:
          description: "The request requires user authentication."
        403:
          description: "The user is not authorized to perform this operation."
        404:
          description: "The resource does not exist."
  /orchestrations/{orchestrationId}:
    get:
      tags:
      - "Orchestration"
      summary: "Get the specified orchestration."
      description: ""
      operationId: "getOrchestrationById"
      produces:
      - "application/json"
      parameters:
      - name: "orchestrationId"
        in: "path"
        description: "ID of the orchestration to retrieve."
        required: true
        type: "string"
      responses:
        200:
          description: "Retrieved the orchestration."
          schema:
            $ref: "#/definitions/OrchestrationRepresentation"
        400:
          description: "The server can't process the request due to an invalid representation."
        404:
          description: "The resource does not exist."
    put:
      tags:
      - "Orchestration"
      summary: "Update the specified orchestration using the full orchestration definition."
      description: ""
      operationId: "updateOrchestrationWithForm"
      consumes:
      - "application/x-www-form-urlencoded"
      produces:
      - "application/json"
      parameters:
      - name: "orchestrationId"
        in: "path"
        description: "ID of orchestration to update."
        required: true
        type: "string"
      - in: "body"
        name: "orchestrationInput"
        description: "The full orchestration definition to replace the current orchestration with."
        required: true
        schema:
          $ref: "#/definitions/OrchestrationInputRepresentation"
      responses:
        200:
          description: "Updated the orchestration."
          schema:
            $ref: "#/definitions/OrchestrationRepresentation"
        400:
          description: "The server can't process the request due to an invalid representation."
        401:
          description: "The request requires user authentication."
        403:
          description: "The user is not authorized to perform this operation."
    delete:
      tags:
      - "Orchestration"
      summary: "Delete the specified orchestration."
      description: ""
      operationId: "deleteOrchestration"
      produces:
      - "application/json"
      parameters:
      - name: "orchestrationId"
        in: "path"
        description: "ID of the orchestration to delete."
        required: true
        type: "string"
      responses:
        400:
          description: "The server can't process the request due to an invalid representation."
        409:
          description: "The orchestration cannot be deleted because it is active."
        204:
          description: "Deleted the orchestration."

  /orchestrations/{orchestrationId}/activations:
    post:
      tags:
      - "Orchestration"
      summary: "Activate the specified orchestration, optionally using activation options."
      description: ""
      operationId: "createOrchestrationActivation"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "orchestrationId"
        in: "path"
        description: "ID of the orchestration to activate."
        required: true
        type: "string"
      - in: "body"
        name: "body"
        description: "Optional activation options. Otherwise, an empty body ({})."
        required: true
        schema:
          $ref: "#/definitions/OrchestrationActivationInputRepresentation"
      responses:
        401:
          description: "The request requires user authentication."
        403:
          description: "The user is not authorized to perform this operation."
        404:
          description: "The resource does not exist."
        409:
          description: "The orchestration cannot be activated due to one or more validation errors."
          schema: 
            $ref: "#/definitions/OrchestrationActivationValidationFailureRepresentation"
        201:
          description: "Activated the orchestration."
          schema:
            $ref: "#/definitions/OrchestrationActivationRepresentation"
    get:
      tags:
      - "Orchestration"
      summary: "Get the activation history for the specified orchestration. The activations are sorted by creation date in descending order."
      description: ""
      operationId: "getOrchestrationActivations"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "orchestrationId"
        in: "path"
        description: "ID of the orchestration to get the activation history for."
        required: true
        type: "string"
      - name: "page"
        in: "query"
        description: "For internal use only."
        required: false
        type: "string"
      - name: "pageSize"
        in: "query"
        description: "The number of activations returned per page. When a page of the response is returned, it contains the nextPageUrl property which is the URL that you use to get the next page of results."
        required: false
        type: "integer"
      responses:
        400:
          description: "The server can't process the request due to an invalid representation."
        401:
          description: "The request requires user authentication."
        403:
          description: "The user is not authorized to perform this operation."
        404:
          description: "The resource does not exist."
        200:
          description: "Retrieved orchestration activations."
          schema:
            $ref: "#/definitions/OrchestrationActivationCollectionRepresentation"

  /orchestrations/{orchestrationId}/activations/last:
    get:
      tags:
      - "Orchestration"
      summary: "Get the last activation for the specified orchestration."
      description: ""
      operationId: "getLastOrchestrationActivation"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "orchestrationId"
        in: "path"
        description: "ID of the orchestration to get activation information for."
        required: true
        type: "string"
      responses:
        400:
          description: "The server can't process the request due to an invalid representation."
        401:
          description: "The request requires user authentication."
        403:
          description: "The user is not authorized to perform this operation."
        404:
          description: "The resource does not exist."
        200:
          description: "Retrieved the last activation for the orchestration."
          schema:
            $ref: "#/definitions/OrchestrationActivationRepresentation"
    patch:
      tags:
      - "Orchestration"
      summary: "Deactivate the specified orchestration. Can only be used to deactivate an active orchestration."
      description: ""
      operationId: "updateLastOrchestrationActivation"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "orchestrationId"
        in: "path"
        description: "ID of the orchestration to deactivate."
        required: true
        type: "string"
      - in: "body"
        name: "body"
        description: "The body must include the status property with a value of Inactive. Optionally, you can specify whether to delete running orchestration instances by including the resetInstancesOnActivation option."
        required: true
        schema:
          $ref: "#/definitions/OrchestrationActivationInputRepresentation"
      responses:
        400:
          description: "The server can't process the request due to an invalid representation."
        401:
          description: "The request requires user authentication."
        403:
          description: "The user is not authorized to perform this operation."
        404:
          description: "The resource does not exist."
        200:
          description: "Deactivated orchestration."
          schema:
            $ref: "#/definitions/OrchestrationActivationRepresentation"

  /orchestrations/{orchestrationId}/activations/{activationId}:
    get:
      tags:
      - "Orchestration"
      summary: "Get activation information for the specified orchestration and activation."
      description: ""
      operationId: "getOrchestrationActivationById"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "orchestrationId"
        in: "path"
        description: "ID of the orchestration for which to get activation information."
        required: true
        type: "string"
      - name: "activationId"
        in: "path"
        description: "ID of the activation to get details of."
        required: true
        type: "string"
      responses:
        400:
          description: "The server can't process the request due to an invalid representation."
        401:
          description: "The request requires user authentication."
        403:
          description: "The user is not authorized to perform this operation."
        404:
          description: "The resource does not exist."
        200:
          description: "Retrieved orchestration activation details."
          schema:
            $ref: "#/definitions/OrchestrationActivationRepresentation"
    patch:
      tags:
      - "Orchestration"
      summary: "Deactivate the specified orchestration activation. No other updates are supported."
      description: ""
      operationId: "updateOrchestrationActivation"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "orchestrationId"
        in: "path"
        description: "ID of the orchestration to deactivate."
        required: true
        type: "string"
      - name: "activationId"
        in: "path"
        description: "ID of the activation to deactivate."
        required: true
        type: "string"
      - in: "body"
        name: "body"
        description: "The body must include the status property with a value of Inactive. Optionally, you can specify whether to delete running orchestration instances by including the resetInstancesOnActivation option."
        required: true
        schema:
          $ref: "#/definitions/OrchestrationActivationInputRepresentation"
      responses:
        400:
          description: "The server can't process the request due to an invalid representation."
        401:
          description: "The request requires user authentication."
        403:
          description: "The user is not authorized to perform this operation."
        404:
          description: "The resource does not exist."
        200:
          description: "Deactivated the orchestration."
          schema:
            $ref: "#/definitions/OrchestrationActivationRepresentation"

  /orchestrations/{orchestrationId}/instances:
    get:
      tags:
      - "Orchestration Instance"
      summary: "Get the orchestration instances in the specified orchestration."
      operationId: "getOrchestrationInstances"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "orchestrationId"
        in: "path"
        description: "ID of orchestration for which to get the instances."
        required: true
        type: "string"
      - name: "stateId"
        in: "query"
        description: "ID of state for which to get orchestration instances."
        required: false
        type: "string"
      - name: "page"
        in: "query"
        description: "For internal use only."
        required: false
        type: "string"
      - name: "pageSize"
        in: "query"
        description: "The number of orchestration instances returned per page. When one page is returned, it contains the URL in the nextPageUrl property that you use to get the next page of results."
        required: false
        type: "integer"
      responses:
        400:
          description: "The server can't process the request due to an invalid representation."
        401:
          description: "The request requires user authentication."
        403:
          description: "The user is not authorized to perform this operation."
        404:
          description: "The resource does not exist."
        200:
          description: "Retrieved orchestration instances."
          schema:
            $ref: "#/definitions/OrchestrationInstanceCollectionRepresentation"

  /orchestrations/{orchestrationId}/instances/{instanceKey}:
    get:
      tags:
      - "Orchestration Instance"
      summary: "Get the orchestration instance corresponding to the specified orchestration and instance key."
      operationId: "getOrchestrationInstanceByKey"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "orchestrationId"
        in: "path"
        required: true
        type: "string"
        description: "A unique identifier for the orchestration instance."
      - name: "instanceKey"
        in: "path"
        description: "A key that uniquely identifies an orchestration instance. The instanceKey is the value of the event key field."
        required: true
        type: "string"
      responses:
        400:
          description: "The server can't process the request due to an invalid representation."
        401:
          description: "The request requires user authentication."
        403:
          description: "The user is not authorized to perform this operation."
        404:
          description: "The resource does not exist."
        200:
          description: "Retrieved the orchestration instance."
          schema:
            $ref: "#/definitions/OrchestrationInstanceDetailRepresentation"
    delete:
      tags:
      - "Orchestration Instance"
      summary: "Delete the orchestration instance corresponding to the specified orchestration and instance key."
      operationId: "deleteOrchestrationInstanceByKey"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "orchestrationId"
        in: "path"
        required: true
        type: "string"
        description: "A unique identifier for the orchestration instance."
      - name: "instanceKey"
        in: "path"
        description: "A key that uniquely identifies an orchestration instance. The instanceKey is the value of the event key field."
        required: true
        type: "string"
      responses:
        400:
          description: "The server can't process the request due to an invalid representation."
        401:
          description: "The request requires user authentication."
        403:
          description: "The user is not authorized to perform this operation."
        409:
          description: "Delete failed as not all the data pertinent to the orchestration instance can be deleted."
        501:
          description: "This orchestration instance cannot be deleted."
        204: # No content
          description: "Deleted data pertinent to the orchestration instance key."

  /orchestrations/{orchestrationId}/instances/{instanceKey}/log:
    get:
      tags:
      - "Orchestration Tracker"
      summary: "Get a log of orchestration events for a specific orchestration and key value."
      operationId: "getOrchestrationInstanceLog"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "orchestrationId"
        in: "path"
        type: "string"
        required: true
        description: "Orchestration ID for which to get the log of events for a specific orchestration instance key value."
      - name: "instanceKey"
        in: "path"
        type: "string"
        required: true
        description: "Orchestration instance key value for which to get a log of orchestration events."
      - name: "fromDate"
        in: "query"
        type: "string"
        format: "yyyy-MM-dd'T'HH:mm:ss.SSSZZ"
        required: true
        description: "Get log events for which the timestamp is later than fromDate."
      - name: "toDate"
        in: "query"
        type: "string"
        format: "yyyy-MM-dd'T'HH:mm:ss.SSSZZ"
        required: true
        description: "Get log events for which the timestamp is prior to toDate"
      - name: "page"
        in: "query"
        description: "For internal use only."
        type: "string"
      - name: "pageSize"
        in: "query"
        description: "The number of log events returned per page. When one page is returned, it contains the URL in the nextPageUrl property that you use to get the next page of results."
        type: "integer"
      responses:
        400:
          description: "The server can't process the request due to an invalid representation."
        401:
          description: "The request requires user authentication."
        403:
          description: "The user is not authorized to perform this operation."
        404:
          description: "The resource does not exist." 
        200:
          description: "A log of orchestration events for a specific orchestration and key value."
          schema:
            $ref: "#/definitions/OrchestrationLogEventCollectionRepresentation"

  /orchestrations/{orchestrationId}/states:
    get:
      tags:
      - "Orchestration"
      summary: "Get the states in this orchestration."
      operationId: "getOrchestrationStates"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "orchestrationId"
        in: "path"
        description: "ID of the orchestration for which to get the states."
        required: true
        type: "string"
      responses:
        400:
          description: "The server can't process the request due to an invalid representation."
        401:
          description: "The request requires user authentication."
        403:
          description: "The user is not authorized to perform this operation."
        404:
          description: "The resource does not exist."
        200:
          description: "A list of states for the orchestration."
          schema:
            $ref: "#/definitions/OrchestrationStateCollectionRepresentation"

  /orchestrations/{orchestrationId}/metrics/transitions:
    get:
      tags:
      - "Orchestration Metrics"
      summary: "Get state transition counts for the specified orchestration."
      description: ""
      operationId: "getOrchestrationTransitionCounts"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "orchestrationId"
        in: "path"
        description: "ID of the orchestration to get transition counts for."
        required: true
        type: "string"
      responses:
        400:
          description: "The server can't process the request due to an invalid representation."
        401:
          description: "The request requires user authentication."
        403:
          description: "The user is not authorized to perform this operation."
        404:
          description: "The resource does not exist."
        200:
          description: "Retrieved a collection of state transition counts for the orchestration."
          schema:
            type: "array"
            items:
              $ref: "#/definitions/OrchestrationTransitionCount"

  /orchestrations/{orchestrationId}/trackers:
    get:
      tags:
      - "Orchestration Tracker"
      summary: "Get a list of trackers setup for this orchestration."
      operationId: "getOrchestrationTrackers"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "orchestrationId"
        in: "path"
        description: "ID of the orchestration for which to get trackers."
        required: true
        type: "string"
      - name: "page"
        in: "query"
        description: "For internal use only."
        type: "string"
      - name: "pageSize"
        in: "query"
        description: "The number of trackers returned per page. When a page of the response is returned, it contains the nextPageUrl property which is the URL that you use to get the next page of results."
        type: "integer"
      responses:
        400:
          description: "The server can't process the request due to an invalid representation."
        401:
          description: "The request requires user authentication."
        403:
          description: "The user is not authorized to perform this operation."
        404:
          description: "The resource does not exist."
        200:
          description: "A list of trackers."
          schema:
            $ref: "#/definitions/OrchestrationTrackerCollectionRepresentation"
    post:        
      tags:
      - "Orchestration Tracker"
      summary: "Create a new tracker for an orchestration."
      operationId: "createTracker"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "orchestrationId"
        in: "path"
        description: "ID of the orchestration for which to create a tracker."
        required: true
        type: "string"
      - in: "body"
        name: "body"
        description: "Tracker definition."
        required: true
        schema:
          $ref: "#/definitions/OrchestrationTrackerPostInputRepresentation"
      responses:
        400:
          description: "The server can't process the request due to an invalid representation."
        401:
          description: "The request requires user authentication."
        403:
          description: "The user is not authorized to perform this operation."
        201:
          description: "Created an orchestration tracker."
          schema:
            $ref: "#/definitions/OrchestrationTrackerRepresentation"

  /orchestrations/{orchestrationId}/trackers/{trackerId}:
    get:
      tags:
      - "Orchestration Tracker"
      summary: "Get the specified tracker corresponding to the specified orchestration."
      description: ""
      operationId: "getTrackerById"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "orchestrationId"
        in: "path"
        description: "ID of the tracker's orchestration."
        required: true
        type: "string"
      - name: "trackerId"
        in: "path"
        description: "ID of the tracker."
        required: true
        type: "string"
      responses:
        400:
          description: "The server can't process the request due to an invalid representation."
        401:
          description: "The request requires user authentication."
        403:
          description: "The user is not authorized to perform this operation."
        404:
          description: "The resource does not exist."    
        200:
          description: "Retrieved the orchestration tracker."
          schema:
            $ref: "#/definitions/OrchestrationTrackerRepresentation"
    patch:
      tags:
      - "Orchestration Tracker"
      summary: "Update a tracker."
      description: ""
      operationId: "updateTracker"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "orchestrationId"
        in: "path"
        description: "ID of a tracker's orchestration."
        required: true
        type: "string"
      - name: "trackerId"
        in: "path"
        description: "ID of a tracker."
        required: true
        type: "string"
      - in: "body"
        name: "body"
        description: "Tracker to update."
        required: true
        schema:
          $ref: "#/definitions/OrchestrationTrackerPatchInputRepresentation"
      responses:
        400:
          description: "The server can't process the request due to an invalid representation."
        401:
          description: "The request requires user authentication."
        403:
          description: "The user is not authorized to perform this operation."
        404:
          description: "The resource does not exist."    
        200:
          description: "Updated the orchestration tracker."
          schema:
            $ref: "#/definitions/OrchestrationTrackerRepresentation"
    delete:
      tags:
      - "Orchestration Tracker"
      summary: "Delete a tracker."
      description: ""
      operationId: "deleteTracker"
      consumes:
      - "application/json"
      parameters:
      - name: "orchestrationId"
        in: "path"
        description: "ID of the tracker's orchestration for which to delete the tracker."
        required: true
        type: "string"
      - name: "trackerId"
        in: "path"
        description: "ID of the tracker to delete."
        required: true
        type: "string"
      responses:
        400:
          description: "The server can't process the request due to an invalid representation."
        401:
          description: "The request requires user authentication."
        403:
          description: "The user is not authorized to perform this operation."
        204:
          description: "Deleted the orchestration tracker."

  /datasets:
    get:
      tags:
      - "Dataset"
      summary: "List all datasets that have been defined in your org."
      description: ""
      operationId: "getDatasets"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "page"
        in: "query"
        description: "For internal use only."
        required: false
        type: "string"
      - name: "pageSize"
        in: "query"
        description: "The number of datasets returned per page. When one page is returned, it contains the URL in the nextPageUrl property that you use to get the next page of results."
        required: false
        type: "integer"
      responses:
        400:
          description: "The server can't process the request due to an invalid representation."
        401:
          description: "The request requires user authentication."
        403:
          description: "The user is not authorized to perform this operation."
        200:
          description: "Retrieved all datasets."
          schema:
            $ref: "#/definitions/OrchestrationDatasetCollectionRepresentation"
  
  /datasets/{name}:
    get:
      tags:
      - "Dataset"
      summary: "Get the specified dataset."
      description: ""
      operationId: "getDatasetById"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "name"
        in: "path"
        description: "Unique name of the dataset to retrieve."
        required: true
        type: "string"
      responses:
        400:
          description: "The server can't process the request due to an invalid representation."
        401:
          description: "The request requires user authentication."
        403:
          description: "The user is not authorized to perform this operation."
        404:
          description: "The resource does not exist."
        200:
          description: "Retrieved the dataset."
          schema:
            $ref: "#/definitions/OrchestrationDatasetDetailRepresentation"

  /usage:
    get:
      summary: "Get IoT usage information for the entire org. Usage information includes allocations for events and orchestrations, the number of events processed and skipped across all orchestrations, and a link to usage information for orchestration instances."
      description: ""
      tags:
        - "Usage and Allocations"
      responses:
        401:
          description: "The request requires user authentication."
        403:
          description: "The user is not authorized to perform this operation."
        200:
          description: "Retrieved IoT usage for the Salesforce org."
          schema:
            $ref: '#/definitions/UsageDetailRepresentation'

  /usage/orchestration-usage:
    get:
      parameters:
      - name: "page"
        in: "query"
        description: "For internal use only."
        required: false
        type: "string"
      - name: "pageSize"
        in: "query"
        description: "The number of items returned per page. When one page is returned, it contains the URL in the nextPageUrl property that you use to get the next page of results."
        required: false
        type: "integer"

      summary: "Get usage data for each orchestration in the org, such as the number of instances, and the number of processed and skipped events per orchestration."
      description: ""
      tags:
        - "Usage and Allocations"
      responses:
        401:
          description: "The request requires user authentication."
        403:
          description: "The user is not authorized to perform this operation."
        200:
          description: "Retrieved a list of orchestrations and their usage information."
          schema:
            $ref: '#/definitions/OrchestrationUsageCollectionRepresentation'

  /activities:
   get:
     parameters:
     
     - name: "sourceIds"
       in: "query"
       description: "IDs of the source objects to be retrieved."
       required: false
       type: "array"
       items:
         type : "string"
         
     - name: "search"
       in: "query"
       description: "Single-word term search."
       required: false
       type: "string"
       
     - name: "level"
       in: "query"
       description: "Activity log level."
       required: false
       type: "string"
       enum:
         - "Info"
         - "Error"
         
     - name: "activityType"
       in: "query"
       description: "Type of activity."
       required: false
       type: "string"
       enum:
         - "ContextSave"
         - "ContextDelete"
         - "ContextActivate"
         - "OrchestrationSave"
         - "OrchestrationDelete"
         - "OrchestrationActivate"
         - "OrchestrationDeactivate"
         - "OrchestrationInstanceLimitNotification"
         - "EventLimitNotification"
         - "LostEventNotification"
         - "TransitionToErrorState"
         
     - name: "instanceKey"
       in: "query"
       description: "Orchestration instance key."
       required: false
       type: "string"
       
     - name: "startTime"
       in: "query"
       description: "Activity log start-time filter."
       required: false
       type: "string"
       format: "date-time"
       
     - name: "endTime"
       in: "query"
       description: "Activity log end-time filter."
       required: false
       type: "string"
       format: "date-time"
       
     - name: "pageSize"
       in: "query"
       description: "The number of items returned per page. When one page is returned, it contains the URL in the nextPageUrl property that you use to get the next page of results."
       required: false
       type: "integer"
       
     summary: "Get a list of all activities correlating to matching filter parameters."
     description: 
       "This endpoint will return a list of all the activities matching the filter parameters. Optional source record ids can be an array."
     tags:
       - Activity
     responses:
       401:
         description: "The request requires user authentication."
       403:
         description: "The user is not authorized to perform this operation."
       200:
         description: "Retrieved an array of activities satisfying the queried filter parameters."
         schema:
           $ref: '#/definitions/Activity'
           
  /activities/{id}:
    get:
     parameters:
     - name: "id"
       in: "path"
       description: "ID for the log entry."
       required: true
       type: "string"
     summary: "Get a single activity record matching the ID."
     tags:
       - Activity
     responses:
       401:
         description: "The request requires user authentication."
       403:
         description: "The user is not authorized to perform this operation."
       404:
         description: "The resource does not exist."
       200:
         description: "Retrieved the associated activity."
         schema:
           $ref: '#/definitions/ActivityInfo'

definitions:
  ContextInputRepresentation:
    type: "object"
    description: "The definition of a context."
    properties:
      name:
        type: "string"
        example: "Solar_Panel_Context"
        description: "A unique name that's used to refer to the context through the API."
      label:
        type: "string"
        example: "Solar Panel Context"
        description: "The context label that's displayed in the user interface."
      description:
        type: "string"
        description: "A description of the context."
      runtime:
        type: "string"
        enum: ["Standard","HighVolume"]
        description: "The Salesforce IoT runtime used."
      events:
        type: "array"
        description: "A list of one ore more events associated with this context."
        items:
          $ref: "#/definitions/OrchestrationEventTypeInputRepresentation"
      referenceData:
        type: "array"
        description: "The Salesforce object associated with this context."
        maxLength: 1
        items:
          $ref: "#/definitions/ContextDatasetInputRepresentation"
  ContextCollectionRepresentation:
    description: "A list of contexts. Each context representation contains context fields including the context ID and other system fields."
    type: "object"
    required:
    - "contexts"
    properties:
      nextPageUrl:
        type: "string"
        example: ""
        description: "The URL you use to get the next page of contexts."
      contexts:
        type: "array"
        description: "A list of contexts."
        items:
          $ref: "#/definitions/ContextSummaryRepresentation"
  ContextSummaryRepresentation:
    description: "Summary information about a context including system fields and excluding event and reference data information."
    type: "object"
    required:
    - "contexts"
    properties:
      id:
        type: "string"
        example: "0MeS70000004CAQKA2"
        description: "A unique identifier for the context."
      name:
        type: "string"
        example: "Solar_Panel_Context"
        description: "A unique name that's used to refer to the context through the API."
      namespace:
        type: "string"
        description: "A namespace prefix used for packages."
      label:
        type: "string"
        example: "Solar Panel Context"
        description: "The context label that's displayed in the user interface."
      url:
        type: "string"
        description: "Resource URL to retrieve this context."
      status:
        type: "string"
        enum: ["Active","Inactive","Activating","Deactivating","Error"]
      createdDate:
        type: "string"
      createdBy:
        $ref: "#/definitions/UserReference"
      lastModifiedDate:
        type: "string"
      lastModifiedBy:
        $ref: "#/definitions/UserReference"
      description:
        type: "string"
        description: "A context description."
      runtime:
        type: "string"
        enum: ["Standard","HighVolume"]
        description: "The Salesforce IoT runtime used."
  ContextRepresentation:
    description: "The definition of a context including the context ID and other system fields."
    type: "object"
    properties:
      id:
        type: "string"
        example: "0MeS70000004CAQKA2"
        description: "A unique identifier for the context."
      name:
        type: "string"
        example: "Solar_Panel_Context"
        description: "A unique name that's used to refer to the context through the API."
      namespace:
        type: "string"
        description: "A namespace prefix used for packages."
      label:
        type: "string"
        example: "Solar Panel Context"
        description: "The context label that's displayed in the user interface."
      manageableState:
        type: "string"
        enum: ["unmanaged", "released", "deleted", "deprecated", "installed",  "beta", "deletable"]
        description: "An enum that denotes if the orchestration is part of a managed package, and the package state: released, deleted, deprecated, installed, beta, or unmanaged."
      url:
        type: "string"
        description: "Resource URL to retrieve this context."
      createdDate:
        type: "string"
      createdBy:
        $ref: "#/definitions/UserReference"
      lastModifiedDate:
        type: "string"
      lastModifiedBy:
        $ref: "#/definitions/UserReference"
      description:
        type: "string"
        description: "A context description."
      status:
        type: "string"
        enum: ["Active","Inactive","Activating","Deactivating","Error"]
      runtime:
        type: "string"
        enum: ["Standard","HighVolume"]
        description: "The Salesforce IoT runtime used."
      events:
        type: "array"
        description: "A list of events and key fields associated with the context."
        items:
          $ref: "#/definitions/OrchestrationEventType"
      referenceData:
        type: "array"
        maxLength: 1
        description: "The Salesforce object and key field associated with the context."
        items:
          $ref: "#/definitions/ContextDataset"
      orchestrationsUrl:
        type: "string"
        description: "Resource URL to retrieve all orchestrations using this context."

  ContextDefinitionRepresentation:
    type: "object"
    properties:
      events:
        type: "array"
        items:
          $ref: "#/definitions/OrchestrationEventType"
      referenceData:
        type: "array"
        maxLength: 1
        items:
          $ref: "#/definitions/ContextDataset"
  ContextActivationInputRepresentation:
    type: "object"
  ContextActivationCollectionRepresentation:
    type: "object"
    required:
    - "nextPage"
    - "activations"
    properties:
      nextPage:
        type: "string"
        example: ""
      totalSize:
        type: "string"
      url:
        type: "string"
      activations:
        type: "array"
        items:
          $ref: "#/definitions/ContextActivationSummaryRepresentation"
  ContextActivationSummaryRepresentation:
    type: "object"
    properties:
      id:
        type: "string"
      url:
        type: "string"
        description: "Resource URL to retrieve this context summary activation."
      createdDate:
        type: "string"
      createdBy:
        $ref: "#/definitions/UserReference"
      lastModifiedDate:
        type: "string"
      lastModifiedBy:
        $ref: "#/definitions/UserReference"
      status:
        type: "string"
        enum: ["FailedValidation", "Active","Inactive","Activating","Deactivating","Error"]
  ContextActivationRepresentation:
    type: "object"
    properties:
      id:
        type: "string"
      url:
        type: "string"
        description: "Resource URL for this context activation."
      createdDate:
        type: "string"
      createdBy:
        $ref: "#/definitions/UserReference"
      lastModifiedDate:
        type: "string"
      lastModifiedBy:
        $ref: "#/definitions/UserReference"
      contextUrl:
        type: "string"
        description: "Resource URL for the parent context."
      status:
        type: "string"
        enum: ["Active", "Inactive", "Activating", "Validating", "Invalid", "Error"]
      runtime:
        type: "string"
        enum: ["Standard","HighVolume"]
      definition:
        $ref: "#/definitions/ContextDefinitionRepresentation"
      result:
        $ref: "#/definitions/ContextActivationResultRepresentation"

  ContextActivationResultRepresentation:
    description: "A collection of results for the activation of a context."
    type: "object"
    properties:
      messages:
        type: "array"
        items: 
          $ref: "#/definitions/ErrorRepresentation"
      orchestrations:
        type: "array"
        items: 
          $ref: "#/definitions/ContextActivationOrchestrationResultRepresentation"

  ErrorRepresentation:
    description: "A generic error with a message and status."
    type: "object"
    properties:
      text:
        type: "string"
      severity:
        type: "string"
        enum: ["Error", "Warning"]

  ContextActivationOrchestrationResultRepresentation:
    description: "A collection of messages for a specific orchestration during the activation of a context."
    type: "object"
    properties:
      id:
        type: "string"
      label:
        type: "string"
      name:
        type: "string"
      namespace:
        type: "string"
      url:
        type: "string"
      activationUrl:
        type: "string"
      activationStatus:
        type: "string"
        enum: ["Active", "Inactive", "Activating", "Deactivating", "Error", "Unknown"]
      messages:
        type: "array"
        items: 
          $ref: "#/definitions/OrchestrationValidationMessageRepresentation"  

  OrchestrationEventTypeInputRepresentation:
    description: "An event referenced in a context."
    type: "object"
    properties:
      metadata:
        description: "Information about the event, such as the event name, label, type, and ID."
        items:
          $ref: "#/definitions/EventTypeReferenceInputRepresentation"
      keyFields:
        type: "array"
        description: "The key field selected to match event messages with orchestration instances. Only one key field is supported."
        items:
          type: "string"
  ContextDatasetInputRepresentation:
    description: "The reference object and key field associated with the context."
    type: "object"
    required:
    - "metadata"
    properties:
      metadata:
        description: "Information about the reference object, such as the object name, label, and type."
        items:
          $ref: "#/definitions/DatasetReferenceInputRepresentation"
      keyFields:
        type: "array"
        description: "The key field selected to match reference data with orchestration instances. Only one key field is supported."
        items:
          type: "string"
  DatasetReferenceInputRepresentation:
    description: "Information about the reference object, such as the object name and type."
    type: "object"
    required:
    - "type"
    - "name"
    properties:
      type:
        enum: ["SalesforceObjectReference", "Wave"]
        description: "The type of the reference object."
      name:
        type: "string"
        description: "The reference object name."
      namespace:
        type: "string"
        description: "A namespace prefix used for packages."
  EventTypeReferenceInputRepresentation:
    description: "Information about the event."
    type: "object"
    properties:
      type:
        enum: ["PlatformEvent"]
        description: "The event type."
      name:
        type: "string"
        description: "The event name."
      namespace:
        type: "string"
        description: "A namespace prefix used for packages."
  Dependencies:
      type: "object"
      description: "URL to Orchestrations that use the context."
      properties:
        orchestrations:
          type: "string"
          description: "URL to orchestrations that use the context."
  OrchestrationEventType:
    description: "An event and key field."
    type: "object"
    properties:
      metadata:
        description: "Information about the event, such as the event name, label, and type."
        items:
          $ref: "#/definitions/EventTypeReference"
      keyFields:
        type: "array"
        description: "The key field selected to match event messages with orchestration instances. Only one key field is supported."
        items:
          type: "string"
  ContextDataset:
    description: "Dataset or SalesforceObject and key fields associated with the context."
    type: "object"
    required:
    - metadata
    properties:
      metadata:
        description: "Information about the reference object, such as the object name and type."
        items:
          $ref: "#/definitions/DatasetReference"
      keyFields:
        type: "array"
        description: "The key field selected to match reference data with orchestration instances. Only one key field is supported."
        items:
          type: "string"
  EventTypeReference:
    description: "Information about the event, such as the event name, label, and type."
    type: "object"
    properties:
      type:
        enum: ["PlatformEvent"]
        description: "The event type."
      label:
        type: "string"
        description: "The event label that's displayed in the user interface."
      name:
        type: "string"
        description: "A unique name that's used to refer to the event through the API."
      namespace:
        type: "string"
        description: "A namespace prefix used for packages."
      id:
        type: "string"
        description: "A unique identifier for the event definition."
        example: "01IS70000008WrDMAU"

  DatasetReference:
    description: "Information about the reference object, such as the object name and type."
    type: "object"
    required:
    - type
    - name
    - url
    properties:
      type:
        enum: ["SalesforceObjectReference", "Wave"]
        description: "The reference object type."
      label:
        type: "string"
        description: "The reference object label that's displayed in the user interface."
      name:
        type: "string"
        description: "A unique name that's used to refer to the reference object through the API."
      namespace:
        type: "string"
        description: "A namespace prefix used for packages when type is SalesforceObjectReference."
      id:
        type: "string"
        description: "A unique identifier for the Salesforce object when type is SalesforceObjectReference."
        example: "Asset"

  OrchestrationInputRepresentation:
    description: "The orchestration representation including the associated context."
    type: "object"
    properties:
      name:
        type: "string"
        description: "A unique name that's used to refer to the orchestration through the API."
      label:
        type: "string"
        description: "The orchestration label that's displayed in the user interface."
      orchestrationContext:
        items:
          $ref: "#/definitions/ContextReferenceInputRepresentation"
        description: "The definition of the context associated with the orchestration."
      definition:
        items:
          $ref: "#/definitions/OrchestrationDefinitionRepresentation"
        description: "The definition of the orchestration."
  OrchestrationCollectionRepresentation:
    description: "A list containing summary information of all orchestrations."
    type: "object"
    required:
    - "orchestrations"
    properties:
      nextPageUrl:
        type: "string"
        example: ""
        description: "The URL you use to get the next page of orchestrations."
      orchestrations:
        type: "array"
        items:
          $ref: "#/definitions/OrchestrationSummaryRepresentation"
        description: "A list of orchestration summaries returned per page."
  OrchestrationSummaryRepresentation:
    description: "Summary information about an orchestration including system fields but excluding the orchestration definition."
    type: "object"
    properties:
      id:
        type: "string"
        description: "A unique identifier for the orchestration."
      name:
        type: "string"
        description: "A unique name that's used to refer to the orchestration through the API."
      namespace:
        type: "string"
        description: "A namespace prefix used for packages."
      label:
        type: "string"
        description: "The orchestration label that's displayed in the user interface."
      url:
        type: "string"
        description: "Resource URL to retrieve this orchestration."
      createdDate:
        type: "string"
      createdBy:
        $ref: "#/definitions/UserReference"
      lastModifiedDate:
        type: "string"
      lastModifiedBy:
        $ref: "#/definitions/UserReference"
      status:
        type: "string"
        enum: ["Active","Inactive","Activating","Deactivating","Error"]
        description: "The orchestration status."
      orchestrationContext:
        items:
          $ref: "#/definitions/ContextReferenceRepresentation"
        description: "The context associated with the orchestration."
  OrchestrationRepresentation:
  # Add more attributes based on what is required in list view
    description: "An orchestration representation including system fields and the orchestration definition."
    type: "object"
    properties:
      id:
        type: "string"
        description: "A unique identifier for the orchestration."
        example: "0FFS70000004C9NOAU"
      name:
        type: "string"
        description: "A unique name that's used to refer to the orchestration through the API."
      namespace:
        type: "string"
        description: "A namespace prefix used for packages."
      manageableState:
        type: "string"
        enum: ["unmanaged", "released", "deleted", "deprecated", "installed",  "beta", "deletable"]
        description: "An enum that denotes if the orchestration is part of a managed package and the package state: released, deleted, deprecated, installed, beta, or unmanaged."
      label:
        type: "string"
        description: "The orchestration label that's displayed in the user interface."
      url:
        type: "string"
        description: "Resource URL to retrieve this orchestration."
      createdDate:
        type: "string"
      createdBy:
        $ref: "#/definitions/UserReference"
      lastModifiedDate:
        type: "string"
      lastModifiedBy:
        $ref: "#/definitions/UserReference"
      status:
        type: "string"
        enum: ["Active","Inactive","Activating","Deactivating","Error"]
        description: "The orchestration status."
      orchestrationContext:
        items:
          $ref: "#/definitions/ContextReferenceRepresentation"
        description: "The context associated with the orchestration."
      definition:
        items:
          $ref: "#/definitions/OrchestrationDefinitionRepresentation"
        description: "The orchestration definition."
      validationMessages:
        items:
          $ref: "#/definitions/OrchestrationValidationMessagesRepresentation"
        description: "Validation messages returned when saving the orchestration that indicate any errors in the orchestration definition."
      deletedStates:
        type: "array"
        items:
          $ref: "#/definitions/OrchestrationStateReferenceRepresentation"
        description: "A list of states that were deleted."

  OrchestrationValidationMessagesRepresentation:
    description: "A list of validation messages returned when saving an orchestration."
    type: "object"
    properties:
      validationMessages:
        type: "array"
        items:
          $ref: "#/definitions/OrchestrationValidationMessageRepresentation"
        description: "A list of validation messages."

  OrchestrationValidationMessageRepresentation:
    description: "A validation message."
    type: "object"
    properties:
      location:
        type: "string"
        description: "The location of the warning or error."
      message:
        type: "string"
        description: "The validation message text."
      severity:
        type: "string"
        enum: ["Warning","Error"]
        description: "Indicates whether the issue is a warning or an error."

  OrchestrationActivationInputRepresentation:
    description: "Activation status and options."
    type: "object"
    properties:
      status:
        type: "string"
        enum: ["Active","Inactive","Activating","Deactivating","Error"]
        description: "Use the status to deactivate an orchestration by setting the status to Inactive. No status is needed when activating an orchestration."
      options:
        items:
          $ref: "#/definitions/OrchestrationActivationOptions"
        description: "Activation options."
  OrchestrationActivationCollectionRepresentation:
    description: "A list of orchestration activation summaries."
    type: "object"
    required:
    - "activations"
    properties:
      nextPageUrl:
        type: "string"
        example: ""
        description: "The URL you use to get the next page of activations."
      totalSize:
        type: "string"
        description: "The total number of activations for this orchestration."
      url:
        type: "string"
        description: "Resource URL to retrieve this list of activations."
      activations:
        type: "array"
        items:
          $ref: "#/definitions/OrchestrationActivationSummaryRepresentation"
        description: "A list of of orchestration activation summaries."
  OrchestrationActivationSummaryRepresentation:
    description: "Summary information about an orchestration activation."
    type: "object"
    properties:
      id:
        type: "string"
        example: "0MlS70000004C9hKAE"
        description: "A unique identifier for the orchestration activation summary."
      url:
        type: "string"
        description: "Resource URL to retrieve this orchestration activation summary."
      createdDate:
        type: "string"
      createdBy:
        $ref: "#/definitions/UserReference"
      lastModifiedDate:
        type: "string"
      lastModifiedBy:
        $ref: "#/definitions/UserReference"
      status:
        type: "string"
        enum: ["Active","Inactive","Activating","Deactivating","Error"]
        description: "The activation status."
  OrchestrationActivationRepresentation:
    description: "Detailed information about an orchestration activation."
    type: "object"
    properties:
      id:
        type: "string"
        description: "A unique identifier for the activation."
        example: "0MlS70000004C9hKAE"
      url:
        type: "string"
        description: "Resource URL to retrieve this orchestration activation."
      createdDate:
        type: "string"
      createdBy:
        $ref: "#/definitions/UserReference"
      lastModifiedDate:
        type: "string"
      lastModifiedBy:
        $ref: "#/definitions/UserReference"
      orchestrationUrl:
        type: "string"
        description: "Resource URL to retrieve the parent orchestration."
      status:
        type: "string"
        enum: ["Active","Inactive","Activating","Deactivating","Error"]
        description: "The activation status."
      options:
        items:
          $ref: "#/definitions/OrchestrationActivationOptions"
        description: "Activation options."
      definition:
        items:
          $ref: "#/definitions/OrchestrationDefinitionRepresentation"
        description: "The definition of the orchestration at activation time."
  OrchestrationActivationOptions:
    description: "Options used for orchestration activation."
    type: "object"
    properties:
      resetInstancesOnActivation:
        type: "boolean"
        description: "Delete running orchestration instances."
  OrchestrationInstanceCollectionRepresentation:
    type: "object"
    required:
    - "nextPage"
    - "instances"
    properties:
      nextPage:
        type: "string"
        example: ""
      instances:
        type: "array"
        items:
          $ref: "#/definitions/OrchestrationInstanceSummaryRepresentation"
  OrchestrationInstanceSummaryRepresentation:
    type: "object"
    properties:
      instanceKey:  
        type: "string"
        example: "KEY0000"
        description: "Key of the orchestration instance."
      url:
        type: "string"
        description: "Resource URL for this orchestration instance."
      createdDate:
        type: "string"
      createdBy:
        $ref: "#/definitions/UserReference"
      lastModifiedDate:
        type: "string"
      lastModifiedBy:
        $ref: "#/definitions/UserReference"
  OrchestrationInstanceDetailRepresentation:
    description: "Information about an instance of an orchestration."
    type: "object"
    properties:
      instanceKey:
        type: "string"
        description: "A key that uniquely identifies an orchestration instance. The instanceKey is the value of the event key field."
      id:
        type: "string"
        description: "A unique identifier for the orchestration instance."
        example: "0PbS70000004C9hKAE"
      url:
        type: "string"
        description: "Resource URL to retrieve this orchestration instance."
      createdDate:
        type: "string"
      createdBy:
        $ref: "#/definitions/UserReference"
      lastModifiedDate:
        type: "string"
      lastModifiedBy:
        $ref: "#/definitions/UserReference"
      description:
        type: "string"
        description: "A description for the orchestration instance."
      orchestrationState:
        items:
          $ref: "#/definitions/StateReferenceRepresentation"
        description: "The state that the orchestration instance is in."
      variables:
        type: "array"
        items:
          $ref: "#/definitions/VariableRepresentation"
        description: "A list of variables that are part of the orchestration instance."
  OrchestrationStateCollectionRepresentation:
    type: "object"
    required:
    - "states"
    properties:
      states:
        type: "array"
        items:
          $ref: "#/definitions/OrchestrationStateSummaryRepresentation"
  OrchestrationStateSummaryRepresentation:
    type: "object"
    properties:
      stateId:
        type: "string"
        example: "1"
        description: "The internal state ID, not the Salesforce Record ID."
      label: 
        type: "string"
      instancesUrl:
        type: "string"
        description: "Resource URL for the orchestration instances in this state."

  StateReferenceRepresentation:
    description: "A reference to an orchestration state."
    type: "object"
    properties:
      id:
        type: "integer"
        description: "A unique identifier for the state."
      name:
        type: "string"
        description: "The state name."

  VariableRepresentation:
    description: "An orchestration variable."
    type: "object"
    properties:
      name:
        type: "string"
        description: "The variable name."
      value:
        type: "object"
        description: "The variable value."
      dataType:
        type: "string"
        enum: ["Boolean","Number","Date","DateTime","String"]
        description: "The variable type."

  OrchestrationDatasetCollectionRepresentation: 
    type: "object"
    properties:
      nextPageUrl:
        type: "string"
        description: "The URL you use to get the next page of datasets."
      totalSize:
        type: "string"
        example: ""
        description: "The total number of datasets."
      datasets:
        type: "array"
        items:
          $ref: "#/definitions/OrchestrationDatasetSummaryRepresentation"
        description: "A list of of dataset summaries."
  OrchestrationDatasetSummaryRepresentation:
    type: "object"
    properties:
      label: 
        type: "string"
        description: "The dataset label that's displayed in the user interface."
      name: 
        type: "string"
        description: "A unique identifier for the dataset."
      url:
        type: "string"
        description: "Resource URL to retrieve the dataset definition."

  OrchestrationDatasetDetailRepresentation:
    type: "object"
    properties:
      name:
        type: "string"
        description: "A unique identifier for the dataset."
      url:
        type: "string"
        description: "Resource URL to retrieve the dataset definition."
      label:
        type: "string"
        description: "The dataset label that's displayed in the user interface."
      lastRefreshDate:
        type: "string"
        description: "The date of the last data refresh."
      definition:
        $ref: "#/definitions/OrchestrationDatasetDefinitionRepresentation"

  OrchestrationDatasetDefinitionRepresentation:
    type: "object"
    properties:
      fields:
        type: "array"
        items:
            $ref: "#/definitions/OrchestrationDatasetDefinitionFieldRepresentation"
        description: "The fields of this dataset."
      keys:
        type: "array"
        items:
          type: "string"
          description: "The key fields of this dataset."

  OrchestrationDatasetDefinitionFieldRepresentation:
    type: "object"
    properties:
      name:
        type: "string"
        description: "The name of the field."
      dataType:
        enum: ["Number","String","DateTime"]
        description: "The data type of the field."

  OrchestrationTransitionCount:
    description: "The count of orchestration transitions from one state to another."
    type: "object"
    properties:
      count:
        type: "integer"
        description: "The count of orchestration transitions from one state to another."
      fromStateId:
        type: "integer"
        description: "The origin state."
      toStateId:
        type: "integer"
        description: "The destination state."
      action:
        items:
          $ref: "#/definitions/OrchestrationDefinitionLocation"
        description: "The transition action."
  OrchestrationDefinitionLocation:
    type: "string"
    description: "The JSON path to an element of an orchestration definition."

  OrchestrationDefinitionRepresentation:
    description: "The definition of an orchestration including orchestration states, variables, and properties."
    type: "object"
    properties:
      properties:
        items:
          $ref: "#/definitions/OrchestrationPropertiesRepresentation"
        description: "Orchestration properties."
      states:
        type: "array"
        items:
          $ref: "#/definitions/OrchestrationStateRepresentation"
        description: "The states defined for the orchestration."
      variables:
        type: "array"
        items:
          $ref: "#/definitions/OrchestrationVariableRepresentation"
        description: "The variables defined for the orchestration."
      global:
        items:
          $ref: "#/definitions/OrchestrationStateRepresentation"
        description: "The global variables defined for the orchestration."

  OrchestrationPropertiesRepresentation:
    description: "Orchestration properties."
    type: "object"
    properties:
      restartOnError:
        type: "boolean"
        description: "Set to true to create a new orchestration instance for an incoming event with a matching key after an error occurs. By default (false), incoming events are ignored after an error occurs in the matching orchestration instance."
      runOnce:
        type: "boolean"
        description: "Set to true to ignore incoming events with a matching key for an exited orchestration instance. By default (false), incoming events with a matching key delete an exited orchestration instance and create a new instance."

  OrchestrationStateReferenceRepresentation:
    description: "A reference to an orchestration state."
    type: "object"
    properties:
      id:
        type: "integer"
        description: "A unique identifier for the state."
      name:
        type: "string"
        description: "The state name."

  OrchestrationStateRepresentation: #extends OrchestrationStateReferenceRepresentation
    description: "An orchestration state."
    type: "object"
    properties:
      id:
        type: "integer"
        description: "A unique identifier for the state."
      name:
        type: "string"
        description: "The state name."
      initial:
        type: "boolean"
        description: "Indicates whether the state is the first state to be evaluated for a new orchestration instance."
      rules:
        type: "array"
        items:
          $ref: "#/definitions/OrchestrationRuleRepresentation"
        description: "The rules defined for the orchestration."

  OrchestrationRuleRepresentation:
    description: "An orchestration rule."
    type: "object"
    properties:
      id:
        type: "integer"
        description: "A unique identifier for the rule."
      description:
        type: "string"
        description: "A rule description."
      when:
        items:
         $ref: "#/definitions/OrchestrationRuleWhenRepresentation"
        description: "Specifies when the rule is evaluated."
      condition:
        type: "string"
        description: "Specifies the condition to be evaluated. The Salesforce Expression Language is supported."
      throttle:
        items:
          $ref: "#/definitions/OrchestrationRuleThrottleRepresentation"
        description: "The throttling behavior applied to the rule."
      actions:
        type: "array"
        items:
          $ref: "#/definitions/OrchestrationActionRepresentation"
        description: "A list of actions to execute, such as assigning a variable value or creating a Salesforce record, when a condition is met."

  OrchestrationRuleWhenRepresentation: #Abstract
    description: "The rule when condition."
    type: "object"
    properties:
      type: #Discriminator
        type: "string"
        enum: ["Always","Immediately","Second", "Minute", Hour","Day","Event", "Custom"] 
        description: "The when condition value."
        
  OrchestrationRuleWhenSimpleRepresentation: #Abstract - Always/Immediately - no params
    type: "object"

  OrchestrationRuleWhenTemporalRepresentation: #extends OrchestrationRuleWhenRepresentation in type="Second, Minute, Hour,Day" case
    type: "object"
    properties:
      value:
        type: "string"

  OrchestrationRuleWhenEventRepresentation: #extends OrchestrationRuleWhenRepresentation in type="Event" case
    type: "object"
    properties:
      eventSource:
        type: "string"

  OrchestrationRuleWhenCustomRepresentation: #extends OrchestrationRuleWhenRepresentation in the type="Custom" case
    type: "object"
    properties:
      value:
        type: "string"
        
  OrchestrationActionRepresentation: #Abstract
    description: "An action defined in a rule."
    type: "object"
    properties:
      type: #Discriminator
        type: "string"
        enum: ["AssignVariable","ResetVariable","ChangeState","Terminate","SalesforceOutputAction"]
        description: "The type of action."

  OrchestrationAssignVariableActionRepresentation:
    type: "object"
    properties:
      variableId:
        type: "integer"
      value:
        type: "string"

  OrchestrationResetVariableActionRepresentation:
    type: "object"
    properties:
      variableId:
        type: "integer"

  OrchestrationChangeStateActionRepresentation:
    type: "object"
    properties:
      stateId:
        type: "integer"

  OrchestrationTerminateActionRepresentation:
    type: "object"
    properties:
      exitType:
        type: "string"
        enum: ["Success","Failure","Expired","NotApplicable"]

  OrchestrationOutputActionRepresentation:
    type: "object"
    properties:
      id:
        type: "integer"
      label:
        type: "string"
      responseEventName:
        type: "string"
      isResponseIngested:
        type: "boolean"

  OrchestrationSalesforceOutputActionRepresentation:
    type: "object"
    properties:
      name:
        type: "string"
        enum: ["Create","Read","Edit","Delete"]
      label:
        type: "string"
      fieldAssignments:
        type: "array"
        items:
          $ref: "#/definitions/OrchestrationSalesforceOutputActionField"
      recordFilters:
        type: "array"
        items:
          $ref: "#/definitions/OrchestrationSalesforceOutputActionField"
      salesforceObjectApiName:
        type: "string"
      responseEventName:
        type: "string"

  OrchestrationSalesforceOutputActionField:
    description: "A Salesforce record field assignment in a Salesforce output action."
    type: "object"
    properties:
      field:
        type: "string"
        description: "The field name."
      value:
        type: "string"
        description: "The field value."

  OrchestrationVariableRepresentation:
    description: "A variable defined in an orchestration."
    type: "object"
    properties:
      id:
        type: "integer"
        example: 0
        description: "A unique identifier for the variable."
      name:
        type: "string"
        description: "The variable name."
      description:
        type: "string"
        description: "A description of the variable."
      eventSource:
        type: "string"
        description: "The event from which field values are used to build the variable value."
      condition:
        type: "string"
        description: "The condition to be evaluated. The Salesforce Expression Language is supported."
      initialValue:
        type: "string"
        description: "An initial value for the variable."
      value:
        items:
          $ref: "#/definitions/OrchestrationVariableValueRepresentation"
        description: "The variable value expressed as a formula."
      dataType:
        description: "The data type of the variable."
        type: "string"
        enum: ["Boolean", "Date", "DateTime", "Number", "String"]

  OrchestrationVariableValueRepresentation:
    description: "The variable value expressed as a formula."
    type: "object"
    properties:
      type:
        type: "string"
        enum: ["Avg","Sum","Min","Max","Count","ConsecutiveDuration","Custom"]
        description: "The formula to use to calculate the value."

  OrchestrationEventFieldVariableValueRepresentation:
    type: "object"
    properties:
      eventField:
        type: "string"

  OrchestrationTemporalAggregationVariableValueRepresentation:
    type: "object"
    properties:
      eventField:
        type: "string"
      temporalWindow:
        $ref: "#/definitions/SalesforceTemporalExpression"

  OrchestrationCountAggregationVariableValueRepresentation:
    type: "object"
    properties:
      temporalWindow:
        $ref: "#/definitions/SalesforceTemporalExpression"

  OrchestrationCustomVariableValueRepresentation: #extends OrchestrationVariableValueRepresentation in the type="Custom" case
    type: "object"
    properties:
      formula:
        type: "string"

  OrchestrationRuleThrottleRepresentation:
    description: "Throttling behavior applied to a rule."
    type: "object"
    properties:
      times:
        type: "integer"
        description: "The maximum number of times per period that the rule can be triggered."
      period:
        type: "integer"
        description: "The period during which throttling occurs."
      unit:
        type: "string"
        enum: ["Seconds","Minutes","Hours","Days","Weeks","Months","Years"]
        description: "The time unit associated with the period."

  SalesforceExpression:
    type: "string"

  SalesforceTemporalExpression:
    type: "string"

  ContextReferenceRepresentation:
    description: "A reference to a context."
    type: "object"
    properties:
      id:
        type: "string"
        description: "A unique identifier for the context."
      name:
        type: "string"
        description: "The context name."
      namespace:
        type: "string"
        description: "A namespace prefix used for packages."
      url:
        type: "string"
        description: "Resource URL to retrieve this context."
      runtime:
        type: "string"
        enum: ["Standard","HighVolume"]
        description: "The Salesforce IoT runtime used."

  ContextReferenceInputRepresentation:
    description: "The context name and namespace."
    type: "object"
    properties:
      name:
        type: "string"
        description: "The context name."
      namespace:
        type: "string"
        description: "A namespace prefix used for packages."

  UserReference:
    description: "A reference to a user."
    type: "object"
    properties:
      name:
        type: "string"
        description: "The user name."
      id:
        type: "string"
        description: "The user ID."

  UsageDetailRepresentation:
    description: "Detailed information about IoT usage for the Salesforce org."
    type: object
    properties:
      eventUsage:
        allOf:
        - $ref: '#/definitions/EventUsageRepresentation'
        description: "Maximum Number of events processed and skipped across the whole org in the last 24 hours."
      allocations:
        allOf:
        - $ref: '#/definitions/AllocationsRepresentation'
        description: "Event and orchestration allocations for the org."
      orchestrationsUsageUrl:
        type: string
        format: uri
        description: "Resource URL to retrieve usage detail information."


  OrchestrationUsageCollectionRepresentation:
    description: "A list of orchestration usage information."
    type: object
    properties:
      nextPageUrl:
        type: "string"
        format: uri
        description: "The URL you use to get the next page of orchestration usage information."
      totalSize:
        type: "integer"
        description: "Total number of usage items."
      Orchestrations:
        type: array
        items:
          allOf:
          - $ref: '#/definitions/OrchestrationUsageRepresentation'
        description: "A list of orchestrations and their usage information."

  OrchestrationUsageRepresentation:
    description: "Usage information for an orchestration."
    type: object
    properties:
      activationStatus:
        type: "string"
        enum: ["Active","Inactive","Activating","Deactivating","Error"]
        description: "The orchestration activation status."
      name:
        type: string
        description: "The orchestration name."
      instanceCount:
        type: integer
        description: "The number of instances for the orchestration."
      processedEventCount:
        type: integer
        description: "The number of events processed successfully for the orchestration in the last 24 hours."
      rejectedEventCount:
        type: integer
        description: "The number of events skipped for the orchestration in the last 24 hours."
      orchestrationUrl:
        type: string
        format: uri
        description: "Resource URL to retrieve the orchestration."


  EventUsageRepresentation:
    description: "Event usage information that includes the number of events processed and skipped in the last 24 hours."
    type: object
    properties:
      processedEventCount:
        type: integer
        description: "The number of events processed successfully across the whole org in the last 24 hours."
      rejectedEventCount:
        type: integer
        description: "Number of events skipped across the whole Salesforce org due to exceeded allocations in the last 24 hrs."

  AllocationsRepresentation:
    description: "Allocations for events and orchestration instances for the whole  Salesforce org."
    type: object
    properties:
      maxInstanceAllocation:
        type: array
        items:
          allOf:
          - $ref: '#/definitions/AllocationCountRepresentation'
          description: "Allocation for maximum number of instances per orchestration."
      maxEventAllocation:
        type: array
        items:
          allOf:
          - $ref: '#/definitions/AllocationCountRepresentation'
          description: "Allocation for maximum number of events that can be processed in 24 hours."

  AllocationCountRepresentation:
    description: "An allocation for the Salesforce org."
    type: object
    properties:
      count:
        type: integer
        description: "The value for the allocation."
      description:
        type: string
        description: "The description of the allocation."

  OrchestrationTrackerCollectionRepresentation:
    type: "object"
    required:
    - "url"
    - "totalSize"
    - "trackers"
    properties:
      url:
        type: "string"
        format: "uri"
      nextPageUrl:
        type: "string"
        format: "uri"
      totalSize:
        type: "integer"
      trackers:
        type: "array"
        items:
          $ref: "#/definitions/OrchestrationTrackerRepresentation"

  OrchestrationTrackerRepresentation:  
    type: "object"
    properties:
      id:
        type: "string"
        example: "000000000000000"
        description: "15/18 character Salesforce identifier."
      url:
        type: "string"
        format: "uri"
        description: "Resource URL for this orchestration tracker."
      orchestrationUrl:
        type: "string"
        format: "uri"
      instanceKey:
        $ref: "#/definitions/OrchestrationInstanceKey"
      startDate:
        type: "string"
        format: "yyyy-MM-dd'T'HH:mm:ss.SSSZZ"
      expirationDate:
        type: "string"
        format: "yyyy-MM-dd'T'HH:mm:ss.SSSZZ"
      terminated:
        type: "boolean"
      terminatedDate:
        type: "string"
        format: "yyyy-MM-dd'T'HH:mm:ss.SSSZZ"
      terminationReason:
        type: "string"
        enum: ["Expired", "Throttled"]
      createdDate:
        type: "string"
      createdBy:
        $ref: "#/definitions/UserReference"
      lastModifiedDate:
        type: "string"
      lastModifiedBy:
        $ref: "#/definitions/UserReference"

  OrchestrationTrackerPostInputRepresentation:  
    type: "object"
    required:
    - "instanceKey"
    properties:
      instanceKey:
        type: "string"
      startDate:
        type: "string"
        format: "yyyy-MM-dd'T'HH:mm:ss.SSSZZ"
      expirationDate:
        type: "string"
        format: "yyyy-MM-dd'T'HH:mm:ss.SSSZZ"

  OrchestrationTrackerPatchInputRepresentation:  
    type: "object"
    properties:
      startDate:
        type: "string"
        format: "yyyy-MM-dd'T'HH:mm:ss.SSSZZ"
      expirationDate:
        type: "string"
        format: "yyyy-MM-dd'T'HH:mm:ss.SSSZZ"
      terminated:
        type: "boolean"

  OrchestrationLogEventCollectionRepresentation:
    type: "object"
    required:
    - "url"
    - "log"
    properties:
      url:
        type: string
        format: "uri"
      prevPageUrl:
        type: "string"
        format: "uri"
      nextPageUrl:
        type: "string"
        format: "uri"
      log:
        type: "array"
        items:
          $ref: "#/definitions/OrchestrationLogEventRepresentation"

  OrchestrationLogEventRepresentation:
    type: "object"
    required:
      - orchestrationId
      - activationId
      - instanceKey
      - timestamp
      - name
    properties:
      orchestrationId:
        type: "string"
      activationId:
        type: "string"
      instanceKey:
        $ref: "#/definitions/OrchestrationInstanceKey"
      timestamp:
        type: "integer"
        format: "int64"
      name:
        type: "string"
        enum: ["Begin", "End", "Input", "Output", "FullState", "Info", "Error", "Transition", "Terminate", "VariableChange", "TimerArm", "TimerUnarm", "RuleCondition", "ThrottleCreate", "ThrottleActivate"]
    discriminator: "name"    

  OrchestrationLogBeginEventRepresentation:  #extends OrchestrationLogEventRepresentation["Begin"]
    allOf:
      - $ref: "#/definitions/OrchestrationLogEventRepresentation"
      - type: "object"
        required:
          - lifecycle
          - inputEventKind
        properties:
          name:
            enum: ["Begin"]
          lifecycle:
            $ref: "#/definitions/OrchestrationInstanceLifecycleStatus"
          inputEventKind:
            $ref: "#/definitions/OrchestrationLogEventInputEventKind"

  OrchestrationLogEndEventRepresentation:  #extends OrchestrationLogEventRepresentation["End"]
    allOf:
      - $ref: "#/definitions/OrchestrationLogEventRepresentation"
      - type: "object"
        required:
          - lifecycle
          - inputEventProcessingResult
        properties:
          name:
            enum: ["End"]
          lifecycle:
            $ref: "#/definitions/OrchestrationInstanceLifecycleStatus"
          inputEventProcessingResult:
            $ref: "#/definitions/OrchestrationLogEventInputEventProcessingResult"

  OrchestrationLogInputEventRepresentation:  #extends OrchestrationLogEventRepresentation["Input"]
    allOf:
      - $ref: "#/definitions/OrchestrationLogEventRepresentation"
      - type: "object"
        required:
          - input
        properties:
          name:
            enum: ["Input"]
          input:
            type: "object"
            description: "input event representation"

  OrchestrationLogOutputEventRepresentation:  #extends OrchestrationLogEventRepresentation["Output"]
    allOf:
      - $ref: "#/definitions/OrchestrationLogEventRepresentation"
      - type: "object"
        required:
          - location
          - output
        properties:
          name:
            enum: ["Output"]
          location:
            type: "string"
          output:
            description: "output event representation"

  OrchestrationLogFullStateEventRepresentation:  #extends OrchestrationLogEventRepresentation["FullState"]
    allOf:
      - $ref: "#/definitions/OrchestrationLogEventRepresentation"
      - type: "object"
        required:
          - state
        properties:
          name:
            enum: ["FullState"]
          state:
            $ref: "#/definitions/OrchestrationInstanceDetailRepresentation"

  OrchestrationLogInfoEventRepresentation:  #extends OrchestrationLogEventRepresentation["Info"]
    allOf:
      - $ref: "#/definitions/OrchestrationLogEventRepresentation"
      - type: "object"
        required:
          - location
          - message
        properties:
          name:
            enum: ["Info"]
          location:
            type: "string"
          message:
            type: "string"

  OrchestrationLogErrorEventRepresentation:  #extends OrchestrationLogEventRepresentation["Error"]
    allOf:
      - $ref: "#/definitions/OrchestrationLogEventRepresentation"
      - type: "object"
        required:
          - location
          - message
        properties:
          name:
            enum: ["Error"]
          location:
            type: "string"
          message:
            type: "string"

  OrchestrationLogTransitionEventRepresentation:  #extends OrchestrationLogEventRepresentation["Transition"]
    allOf:
      - $ref: "#/definitions/OrchestrationLogEventRepresentation"
      - type: "object"
        required:
          - location
          - fromState
          - toState
        properties:
          name:
            enum: ["Transition"]
          location:
            type: "string"
          fromState:
            type: "integer"
          toState:
            type: "integer"

  OrchestrationLogTerminateEventRepresentation:  #extends OrchestrationLogEventRepresentation["Terminate"]
    allOf:
      - $ref: "#/definitions/OrchestrationLogEventRepresentation"
      - type: "object"
        required:
          - location
          - terminationKind
          - terminationReason
        properties:
          name:
            enum: ["Terminate"]
          location:
            type: "string"
          terminationKind:
            $ref: "#/definitions/OrchestrationLogEventTerminationKind"
          terminationReason:
            type: "string"

  OrchestrationLogVariableChangeEventRepresentation:  #extends OrchestrationLogEventRepresentation["VariableChange"]
    allOf:
      - $ref: "#/definitions/OrchestrationLogEventRepresentation"
      - type: "object"
        required:
          - location
          - newValue
          - oldValue
        properties:
          name:
            enum: ["VariableChange"]
          location:
            type: "string"
          newValue:
            $ref: "#/definitions/VariableRepresentation"
          oldValue:
            $ref: "#/definitions/VariableRepresentation"

  OrchestrationLogTimerArmEventRepresentation:  #extends OrchestrationLogEventRepresentation["TimerArm"]
    allOf:
      - $ref: "#/definitions/OrchestrationLogEventRepresentation"
      - type: "object"
        required:
          - location
          - armedTime
        properties:
          name:
            enum: ["TimerArm"]
          location:
            type: "string"
          armedTime:
            type: "string"
            description: "Time at which a timer will fire next."

  OrchestrationLogTimerUnarmEventRepresentation:  #extends OrchestrationLogEventRepresentation["TimerUnarm"]
    allOf:
      - $ref: "#/definitions/OrchestrationLogEventRepresentation"
      - type: "object"
        required:
          - location
          - armedTime
        properties:
          name:
            enum: ["TimerUnarm"]
          location:
            type: "string"
          armedTime:
            type: "string"
            description: "Time at which a timer was going to fire next."

  OrchestrationLogRuleConditionEventRepresentation:  #extends OrchestrationLogEventRepresentation["RuleCondition"]
    allOf:
      - $ref: "#/definitions/OrchestrationLogEventRepresentation"
      - type: "object"
        required:
          - location
          - match
          - whenValue
          - conditionValue
        properties:
          name:
            enum: ["RuleCondition"]
          location:
            type: "string"
          match:
            type: "boolean"
            description: "True, if the rule's when and condition evaluated to True;  otherwise false."
          whenValue:
            description: "Result of the when evaluation."
          conditionValue:
            description: "Result of the condition evaluation."

  OrchestrationLogThrottleEventRepresentation:  #extends OrchestrationLogEventRepresentation["ThrottleCreate", "ThrottleActivate"]
    allOf:
      - $ref: "#/definitions/OrchestrationLogEventRepresentation"
      - type: "object"
        required:
          - location
          - throttle
        properties:
          name:
            enum: ["ThrottleCreate", "ThrottleActivate"]
          location:
            type: "string"
          throttle:
            $ref: "#/definitions/OrchestrationRuleThrottleStateRepresentation"

  OrchestrationRuleThrottleStateRepresentation:
    type: "object"

  OrchestrationLogEventTerminationKind:
    type: "string"
    enum: ["Action", "Error"]

  OrchestrationLogEventInputEventKind:
    type: "string"
    enum: ["PlatformEvent", "TimerEvent", "ResponseEvent"]

  OrchestrationLogEventInputEventProcessingResult:
    type: "string"  
    enum: ["Processed", "IgnoredDeprecated", "IgnoredTerminated"]

  OrchestrationInstanceLifecycleStatus:
    type: "string"
    enum: ["NotStarted", "Started", "Restarted", "Current", "Terminated", "Erred", "Deprecated"]

  OrchestrationInstanceKey:
    type: "string"
    example: "KEY0000"
    description: "Key of an orchestration instance."
    
  Source:
    type: object
    properties:
      runtime:
        type: "string"
        enum:
        - "Standard"
        - "HighVolume"
        description: "Runtime type associated with the activity."
      category:
        type: string
        enum:
        - "Orchestration"
        - "Context"
        description: "Nominal category associated with the requested object ID."
      id:
        type: "string"
        description: "18 character identifier or US document ID associated with activity object."
      label:
        type: "string"
        description: "The label."
      name:
        type: "string"
        description: "Name associated with the activity object."
      url:
        type: string
        format: uri
        description: "URL link to the definition associated with the requested object."
        
  InstanceActivityInfo:
    type: object
    properties:
      errorCode:
        type: "string"
        description: "Internal runtime code associated with the error."
      errorMessage:
        type: "string"
        description: "Textual description of the error."
      fromStateId:
        type: "string"
        description: "ID of the state from which the error state originated."
      instanceKey:
        type: "string"
        description: "Event partition key."
      event:
        type: "string"
        description: "Raw json event representation associated with error."
        
  MetadataActivityInfo:
    type: object
    properties:
      originalDefinition:
        type: "string"
        description: "Serialized representation of context or orchestration definition pre-change."
      currentDefinition:
        type: "string"
        description: "Serialized representation of context or orchestration definition post change."
       
  NotificationActivityInfo:
    type: object
    properties:
      recipient:
        type: "string"
        description: "Email address notified."
      reason:
        type: "string"
        description: "Textual description of the notification."
 
  Activity:
    type: object
    properties:
      id:
        type: "string"
        description: "Unique identifier associated with log entry." 
      url:
        type: "string"
        format: uri
        description: "URL to the /activities/{...} for the specific log entry."
      level:
        type: "string"
        enum:
        - "Info"
        - "Error"
        description: "Log level of activity."
      summary:
        type: "string"
        description: "Short summary describing the activity."
      createdBy:
        $ref: "#/definitions/UserReference"
      createdDate:
        type: "string"
        format: "date-time"
        description: "Time the activity was recorded."
      type:
        type: "string"
        description: "Category of activity."
        enum:
          - "ContextSave"
          - "ContextDelete"
          - "ContextActivate"
          - "OrchestrationSave"
          - "OrchestrationDelete"
          - "OrchestrationActivate"
          - "OrchestrationDeactivate"
          - "OrchestrationInstanceLimitNotification"
          - "EventLimitNotification"
          - "LostEventNotification"
          - "TransitionToErrorState"
      source:
        $ref: '#/definitions/Source'
       

  ActivityInfo:
    type: object
    properties:
      activity:
        $ref: '#/definitions/Activity'
      info:
        description: "Basic activity information including activity source."
        schema:
          oneOf:
            - $ref: '#/definitions/InstanceActivityInfo'
            - $ref: '#/definitions/MetadataActivityInfo'
            - $ref: '#/definitions/NotificationActivityInfo'
            
  OrchestrationActivationValidationFailureRepresentation:
    description: "A list of validation messages returned when activating an orchestration with validation errors."
    type: "object"
    properties:
      enhancedErrorType:
        type: "null"
      message:
        type: "string"
      output:
        type: "object"
        properties:
          messages:
            type: "array"
            items: 
              $ref: "#/definitions/OrchestrationValidationMessageRepresentation"  
  